*{
	//cookie banner styling
	#ccfw-page-banner {
		.ccfw-banner__button:not(.ccfw-banner__button--close) {
			background-color: var(--cookie-button-bg);
			color: var(--cookie-button-text);
			-webkit-text-fill-color: var(--cookie-button-text);
		}
		.ccfw-banner__button--expand-options {
			background-color: var(--cookie-secondary-button-bg);
			color: var(--cookie-secondary-button-text);
			border: solid 1px var(--cookie-secondary-button-text);

			path {
				fill: currentColor;
			}
		}
		.ccfw-banner__toggle-slider {
			&[aria-checked=true] {
				background-color: var(--cookie-toggle-bg);

				.ccfw-banner__toggle-slider--on-text {
					color: var(--cookie-toggle-text);
					-webkit-text-fill-color: var(--cookie-toggle-text);
				}
				&:before {
					border-color: var(--cookie-toggle-text);
				}
				&:focus,&:active {
					background-color: var(--cookie-toggle-focus-bg);
				}
			}
			&:focus,&:active {
				box-shadow: 0 0 0 1px #fff, 0 0 0 4px var(--cookie-button-focus-border);
			}
		}
		.ccfw-banner__button:not(.ccfw-banner__button--close),
		button.ccfw-banner__button--expand-options {
			cursor: pointer;

			&:hover {
				background-color: var(--cookie-button-hover-bg);
				color: var(--cookie-button-hover-text);
				-webkit-text-fill-color: var(--cookie-button-hover-text);

				.ccfw-settings-button__text {
					color: var(--cookie-settings-hover-text);
				}
				
				path {
					fill: var(--cookie-button-hover-text);
				}
			}
			&:focus:hover,&:active,&:focus:not(:hover) {
				background-color: var(--cookie-button-focus-bg);
				color: var(--cookie-button-focus-text);
				-webkit-text-fill-color: var(--cookie-button-focus-text);
				box-shadow: 0 0 0 4px var(--cookie-button-focus-border);
				outline-color: var(--cookie-button-focus-border);
				border-color: var(--cookie-button-focus-bg);

				.ccfw-settings-button__text {
					color: var(--cookie-settings-focus-text);
				}

				path {
					fill: var(--cookie-button-focus-text);
				}
			}
		}
		.ccfw-banner__third-party-section-link,
		.ccfw-banner__expanding-section-summary,
		.ccfw-banner__button--close {

			color: var(--link);
			-webkit-text-fill-color: var(--link);
			border-bottom: none;

			&:hover {
				color: var(--link-hover);
				-webkit-text-fill-color: var(--link-hover);
			}

			&:focus {
				color: var(--link-focus);
				-webkit-text-fill-color: var(--link-focus);
				background-color: var(--link-focus-background);
				box-shadow: 0 -2px var(--link-focus-background), 0 4px var(--link-focus-shadow);
				outline: 4px solid transparent;
				border-bottom: none;
			}
		}
		.ccfw-banner__toggle-heading--always-on{
			color: var(--link-visited);
		}
	}

	.ccfw-settings-button {
		svg.ccfw-settings-button__background-triangle path {
			fill: var(--cookie-settings-bg);
		}
		svg.ccfw-settings-button__icon path {
			fill: var(--cookie-settings-text);
		}
		span.ccfw-settings-button__text {
			color: var(--cookie-settings-text);
		}

		&:hover{
			svg.ccfw-settings-button__background-triangle path {
				fill: var(--cookie-settings-hover-bg);
			}
			svg.ccfw-settings-button__icon path {
				fill: var(--cookie-settings-hover-text);
			}
			span.ccfw-settings-button__text {
				color: var(--cookie-settings-hover-text);
			}
		}

		&:focus,&:active {
			svg.ccfw-settings-button__background-triangle path {
				fill: var(--cookie-settings-focus-bg);
			}
			svg.ccfw-settings-button__icon path {
				fill: var(--cookie-settings-focus-text);
			}
			span.ccfw-settings-button__text {
				color: var(--cookie-settings-focus-text);
			}

			/****
			 * Note: the below "before" pseudo-element
			 * This only comes into play if a colour is selected in Hale, otherwise it doesn't change the appearance.
			 * Therefore, all these styles are held here, not the cookie banner plug in.
			 * I've split them into two - firstly the colour-only stuff, then the non-colour stuff
			 */
			&:before {
				// colour-changing styles
				background: linear-gradient(
					-45deg, 
					transparent 0%, 
					transparent 48%, 
					var(--cookie-settings-focus-outline) 48%, 
					var(--cookie-settings-focus-outline) 51%, 
					transparent 51%, 
					transparent 100%
				);
				border-color: transparent var(--cookie-settings-focus-outline) var(--cookie-settings-focus-outline) transparent;
			}
			&:before {
				// non-colour styles which are needed for the colours to shew up
				content: "";
				width: 100%;
				height: 100%;
				position: absolute;
				top: 0px;
				left: 0px;
				border-width: 0px 3px 3px 0px;
				border-style: solid;
			}
		}
	}
	//end cookie banner styling
}
